name: lint

on:
  pull_request:
  merge_group:
  push:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
#   lint:
#     runs-on: ubuntu-latest
#     timeout-minutes: 30

#     steps:
#     - uses: actions/checkout@v2
#       with:
#         fetch-depth: '0'
#         path: ./repos/${{ secrets.REPO_NAME }}
#         ref: ${{ github.ref }}

#     # Install Protocol Buffers Compiler
#     - name: Install Protobuf Compiler (protoc)
#       run: sudo apt-get install -y protobuf-compiler

#     - name: Change to project directory
#       run: cd ./repos/${{ secrets.REPO_NAME }}

#     # Install nightly toolchain and rustfmt
#     - name: Install nightly toolchain and rustfmt
#       run: |
#         rustup toolchain install nightly
#         rustup component add rustfmt --toolchain nightly

#     # Rust Linting with Clippy
#     - uses: dtolnay/rust-toolchain@clippy
#     - uses: Swatinem/rust-cache@v2
#       with:
#         cache-on-failure: true

#     # Run General Clippy Linting
#     - name: Clippy
#       run: cargo clippy --all-features
#       env:
#         RUSTFLAGS: -D warnings
#       working-directory: ./repos/${{ secrets.REPO_NAME }}

    clippy:
        name: clippy
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@clippy
        - uses: Swatinem/rust-cache@v2
          with:
            cache-on-failure: true
        - run:
           cargo clippy --all-features
        env:
           RUSTFLAGS: -D warnings

    docs:
        name: docs
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@nightly
        - uses: Swatinem/rust-cache@v2
          with:
            cache-on-failure: true
        - run: cargo doc --workspace --all-features --no-deps

    # Check Code Formatting
    fmt:
        name: fmt
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
          - uses: actions/checkout@v4
          - uses: dtolnay/rust-toolchain@nightly
            with:
              components: rustfmt
          - run: cargo fmt --all --check

    lint-success:
        name: lint success
        runs-on: ubuntu-latest
        if: always()
        needs: [clippy, docs, fmt]
        timeout-minutes: 30
        steps:
          - name: Decide whether the needed jobs succeeded or failed
            uses: re-actors/alls-green@release/v1
            with:
                jobs: ${{ toJSON(needs) }}
#   fmt:
#     - name: rustfmt
#     - runs-on: ubuntu-latest
#     - timeout-minutes: 30
#     - steps:
#     - uses: actions/checkout@v4
#     - uses: dtolnay/rust-toolchain@nightly
#     - with:
#         components: rustfmt
#     - run: cargo fmt --all --check
#     #run: cargo fmt --all --check
#     #working-directory: ./repos/${{ secrets.REPO_NAME }}

#   # Check Documentation
#   docs: 
#     - name: docs
#     - runs-on: ubuntu-latest
#     - timeout-minutes: 30
#     steps:
#     - uses: actions/checkout@v4
#     - uses: dtolnay/rust-toolchain@nightly
#     - uses: Swatinem/rust-cache@v2
#     with:
#       cache-on-failure: true  
#     run: cargo doc --workspace --all-features --no-deps
#     #working-directory: ./repos/${{ secrets.REPO_NAME }}

